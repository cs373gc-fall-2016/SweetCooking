FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# SweetCooking

Simple API for looking up various recipes, ingredients, and food products.

# Group Search

## Search All Tables [/search/all{?term}]
<code>/search/all?term={terms}</code><br>

### Parameters
- <code>term</code> *(string, required*) - terms to search for

+ Parameters
    + term: brocolli (string) - terms to search for
    
### GET Search All Tables [GET]
+ Response 200 (application/json)

        {
            "and": {
                "recipes": [
                {
                    "id": 1
                    "name": "brocolli casserole"
                    "price": 2.00
                    "origin": "american"
                    "cooktime": 120
                    "category": 1
                    "ingredients": [
                                        5,
                                        7,
                                        25,
                                        68
                                    ],
                    "nutrion": 1
                    "lifestyle": 1
                },
                ...
                ],
                "ingredients": [
                {
                    "id": 2
                    "name": "brocolli"
                    "price": .75
                    "season": "all year"
                    "products": [
                                    3,
                                    17,
                                    33,
                                    52
                                ],
                    "recipes": [
                                    1,
                                    42,
                                    76
                                ],
                    "nutrition": 2
                },
                ...
                ],
                "products": [
                {
                    "id": 3
                    "name": "brocolli slaw"
                    "price": 1
                    "description": "brocolli coleslaw mix"
                    "similarproducts": [
                                            1,
                                            53,
                                            87
                                        ],
                    "nutrition": 3
                    "ingredients": [
                                        2,
                                        4",
                                        66
                                    ],
                    "category": 1
                    "lifestyle": 2
                },
                ...
                ],
                "lifestyle": [
                {
                    "id": 40
                    "weightmanage": true
                    "dietaryrestrion": "none"
                    "glutenfree": true
                    "carbfree": false
                    "vegetarian": true
                    "vegan": true
                    "products": [
                                    1,
                                    33
                                ],
                    "recipes": [
                                    3,
                                    47
                                ],
                },
                ...
                ]
            },
            "or": {
                "brocolli": {
                "recipes": [
                {
                    "id": 1
                    "name": "brocolli casserole"
                    "price": 2
                    "origin": "american"
                    "cooktime": 120
                    "category": 1
                    "ingredients": [
                                        5,
                                        7,
                                        25,
                                        68
                                    ],
                    "nutrion": 1
                    "lifestyle": 1
                },
                ...
                ],
                "ingredients": [
                {
                    "id": 2
                    "name": "brocolli"
                    "price": .75
                    "season": "all year"
                    "products": [
                                    3,
                                    17,
                                    33,
                                    52
                                ],
                    "recipes": [
                                    1,
                                    42,
                                    76
                                ],
                    "nutrition": 2
                },
                ...
                ],
                "products": [
                {
                    "id": 3
                    "name": "brocolli slaw"
                    "price": 1
                    "description": "brocolli coleslaw mix"
                    "similarproducts": [
                                            1,
                                            53,
                                            87
                                        ],
                    "nutrition": 3
                    "ingredients": [
                                        2,
                                        46,
                                        66
                                    ],
                    "category": 1
                    "lifestyle": 2
                },
                ...
                ],
                "lifestyle": [
                {
                    "id": 40
                    "weightmanage": true
                    "dietaryrestrion": "none"
                    "glutenfree": true
                    "carbfree": false
                    "vegetarian": true
                    "vegan": true
                    "products": [
                                    1,
                                    33
                                ],
                    "recipes": [
                                    3,
                                    47
                                ],
                },
                ...
                ]
            }
        }
        
## Search Recipes [/search/recipes{?term}]
<code>/search/recipes?term={terms}</code><br>

#### Parameters
- <code>term</code> *(string, required*) - terms to search for

+ Parameters
    + term: brocolli (string) - terms to search for
    
### GET Search Recipes [GET]
+ Response 200 (application/json)

        {
            "and": {
                "recipes": [
                {
                    "id": 1
                    "name": "brocolli casserole"
                    "price": 2
                    "origin": "american"
                    "cooktime": 120
                    "category": 1
                    "ingredients": [
                                        5,
                                        7,
                                        2",
                                        68
                                    ],
                    "nutrion": 1
                    "lifestyle": 1
                },
                ...
                ],
            },
            "or": {
                "brocolli": {
                "recipes": [
                {
                    "id": 1
                    "name": "brocolli casserole"
                    "price": 2
                    "origin": "american"
                    "cooktime": 120
                    "category": 1
                    "ingredients": [
                                        5,
                                        7,
                                        25,
                                        68
                                    ],
                    "nutrion": 1
                    "lifestyle": 1
                },
                ...
                ],
            }
        }
        
## Search Ingredients [/search/ingredients{?term}]
<code>/search/ingredients?term={terms}</code><br>

#### Parameters
- <code>term</code> *(string, required*) - terms to search for

+ Parameters
    + term: brocolli (string) - terms to search for
    
### GET Search Recipes [GET]
+ Response 200 (application/json)

        {
            "and": {
                "ingredients": [
                {
                    "id": 2
                    "name": "brocolli"
                    "price": .75
                    "season": "all year"
                    "products": [
                                    3,
                                    17,
                                    33,
                                    52
                                ],
                    "recipes": [
                                    1,
                                    42,
                                    76
                                ],
                    "nutrition": 2
                },
                ...
                ],
            },
            "or": {
                "brocolli": {
                "ingredients": [
                {
                    "id": 2
                    "name": "brocolli"
                    "price": .75
                    "season": "all year"
                    "products": [
                                    3,
                                    17,
                                    33,
                                    52
                                ],
                    "recipes": [
                                    1,
                                    42,
                                    76
                                ],
                    "nutrition": 2
                },
                ...
                ],
            }
        }
        
## Search Products [/search/products{?term}]
<code>/search/products?term={terms}</code><br>

#### Parameters
- <code>term</code> *(string, required*) - terms to search for

+ Parameters
    + term: brocolli (string) - terms to search for
    
### GET Search Recipes [GET]
+ Response 200 (application/json)

        {
            "and": {
                "products": [
                {
                    "id": 3
                    "name": "brocolli slaw"
                    "price": 1
                    "description": "brocolli coleslaw mix"
                    "similarproducts": [
                                            1,
                                            53,
                                            87
                                        ],
                    "nutrition": 3
                    "ingredients": [
                                        2,
                                        46,
                                        66
                                    ],
                    "category": 1
                    "lifestyle": 2
                },
                ...
                ],
            },
            "or": {
                "brocolli": {
                "products": [
                {
                    "id": 3
                    "name": "brocolli slaw"
                    "price": 1
                    "description": "brocolli coleslaw mix"
                    "similarproducts": [
                                            1,
                                            53,
                                            87
                                        ],
                    "nutrition": 3
                    "ingredients": [
                                        2,
                                        46,
                                        66
                                    ],
                    "category": 1
                    "lifestyle": 2
                },
                ...
                ],
            }
        }
        
## Search LifeStyles [/search/lifestyles{?term}]
<code>/search/lifestyles?term={terms}</code><br>

#### Parameters
- <code>term</code> *(string, required*) - terms to search for

+ Parameters
    + term: brocolli (string) - terms to search for
    
### GET Search Recipes [GET]
+ Response 200 (application/json)

        {
            "and": {
                "lifestyle": [
                {
                    "id": 40
                    "weightmanage": true
                    "dietaryrestrion": "none"
                    "glutenfree": true
                    "carbfree": false
                    "vegetarian": true
                    "vegan": true
                    "products": [
                                    1,
                                    33
                                ],
                    "recipes": [
                                    3,
                                    47
                                ],
                },
                ...
                ],
            },
            "or": {
                "brocolli": {
                "lifestyle": [
                {
                    "id": 40
                    "weightmanage": true
                    "dietaryrestrion": "none"
                    "glutenfree": true
                    "carbfree": false
                    "vegetarian": true
                    "vegan": true
                    "products": [
                                    1,
                                    33
                                ],
                    "recipes": [
                                    3,
                                    47
                                ],
                },
                ...
                ],
            }
        }

# Group Recipes
## List Recipes [/recipes/{pagenum}{?size,col,order}]
<code>/recipes/{pagenum}?size={size}&col={col}&order={order}</code><br>
Get a list of recipes specified by the page number and optional page size.<br>
Can be sorted ascending or descending by a specific column. <br>
Defaults sorted descending by name.
#### Parameters
- <code>pagenum</code> *(number, required)* - which page to return
- <code>size</code> *(number, optional)* - number of entries per page, defaults to 10
- <code>col</code> *(string, optional)* - column to sort by, defaults to name
- <code>order</code> *(string, opetional)* - either 'asc' or 'desc', defaults to desc

#### Sort options
- <code>name</code>
- <code>price</code>
- <code>origin</code>
- <code>cooktime</code>

+ Parameters
    + pagenum: 1 (number) - which page to return
    + size: 1 (number, optional) - number of entries per page
    + col: name (string, optional) - column to sort by
    + order: desc (string, optional) - either 'asc' or 'desc'
    
### GET List Recipes [GET]
+ Response 200 (application/json)
    + Attributes (object)
        + name: "brocolli casserole" (string) - name of recipe
        + price: 2 (number) - price per serving of recipe
        + origin: "american" (string) - origin of recipe
        + cooktime: 120 (number) - time in minutes to prepare recipe
        + category: 1 (number) - category id number
        + ingredients: [] (array[number]) - array of ingredient ids
        + nutrition: 1 (number) - nutritional info id
        + lifestyle: 2 (number) - lifestyle id
       + Body
        {
            "recipes": [
            {
                "id": 1
                "name": "brocolli casserole"
                "price": 2
                "origin": "american"
                "cooktime": 120
                "category": 1
                "ingredients": [
                                5,
                                7,
                                25,
                                68
                                ],
                "nutrition": 1
                "lifestyle": 2
            }
            ],
            "pagenum": 1,
            "size": 1,
            "total": 578
        }

## Specific Recipes [/recipes{?ids}]
<code>/recipes?ids={ids}</code><br>
Request information about recipes related to **ids**
#### Parameters
- <code>ids</code> *(string, required)* - comma separated list of ids


+ Parameters
    + ids: 1 (string, required) - comma separated list of ids
    
### GET Specific Recipes [GET]
+ Response 200 (application/json)
    + Attributes (object)
        + name: "brocolli casserole" (string) - name of recipe
        + price: 2 (number) - price per serving of recipe
        + origin: "american" (string) - origin of recipe
        + cooktime: 120 (number) - time in minutes to prepare recipe
        + category: 1 (number) - category id number
        + ingredients: [] (array[number]) - array of ingredient ids
        + nutrition: 1 (number) - nutritional info id
        + lifestyle: 2 (number) - lifestyle id
       + Body
        {
            "recipes": [
            {
                "id": 1
                "name": "brocolli casserole"
                "price": 2
                "origin": "american"
                "cooktime": 120
                "category": 1
                "ingredients": [
                                5,
                                7,
                                25,
                                68
                                ],
                "nutrition": 1
                "lifestyle": 2
            }
            ],
        }

# Group Ingredients
## List Ingredients [/ingredients/{pagenum}{?size,col,order}]
<code>/ingredients/{pagenum}?size={size}&col={col}&order={order}</code><br>
Get a list of ingredients specified by the page number and optional page size.<br>
Can be sorted ascending or descending by a specific column. <br>
Defaults sorted descending by name.
#### Parameters
- <code>pagenum</code> *(number, required)* - which page to return
- <code>size</code> *(number, optional)* - number of entries per page, defaults to 10
- <code>col</code> *(string, optional)* - column to sort by, defaults to name
- <code>order</code> *(string, opetional)* - either 'asc' or 'desc', defaults to desc

#### Sort options
- <code>name</code>
- <code>price</code>
- <code>season</code>

+ Parameters
    + pagenum: 1 (number) - which page to return
    + size: 1 (number, optional) - number of entries per page
    + col: name (string, optional) - column to sort by
    + order: desc (string, optional) - either 'asc' or 'desc'
    
### GET List Ingredients [GET]
+ Response 200 (application/json)
    + Attributes (object)
        + name: "brocolli" (string) - name of recipe
        + price: .75 (number) - price per serving of recipe
        + season: "all year" (string) - season to best find ingredient
        + products: [] (array[number]) - array of product ids
        + recipes: [] (array[number]) - array of recipe ids
        + nutrition: 1 (number) - nutritional info id
       + Body
        {
            "ingredients": [
            {
                "id": 1,
                "name": "brocolli casserole",
                "price": .75,
                "season": "all year",
                "products": [
                            2,
                            7
                            ],
                "recipes": [
                            5,
                            9
                            ],
                "nutrition": 1
            }
            ],
            "pagenum": 1,
            "size": 1,
            "total": 578
        }

## Specific Ingredients [/ingredients{?ids}]
<code>/ingredients?ids={ids}</code><br>
Request information about ingredients related to **ids**
#### Parameters
- <code>ids</code> *(string, required)* - comma separated list of ids


+ Parameters
    + ids: 1 (string, required) - comma separated list of ids
    
### GET Specific Ingredients [GET]
+ Response 200 (application/json)
    + Attributes (object)
        + name: "brocolli" (string) - name of ingredient
        + price: .75 (number) - price per serving of ingredient
        + season: "all year" (string) - season to best find ingredient
        + products: [] (array[number]) - array of product ids
        + recipes: [] (array[number]) - array of recipe ids
        + nutrition: 1 (number) - nutritional info id
        + lifestyle: 2 (number) - lifestyle id
       + Body
        {
            "ingredients": [
            {
                "id": 1,
                "name": "brocolli casserole",
                "price": .75,
                "season": "all year",
                "products": [
                            2,
                            7
                            ],
                "recipes": [
                            5,
                            9
                            ],
                "nutrition": 1
            }
            ],
            "pagenum": 1,
            "size": 1,
            "total": 578
        }

# Group Products
## List Products [/products/{pagenum}{?size,col,order}]
<code>/products/{pagenum}?size={size}&col={col}&order={order}</code><br>
Get a list of products specified by the page number and optional page size.<br>
Can be sorted ascending or descending by a specific column. <br>
Defaults sorted descending by name.
#### Parameters
- <code>pagenum</code> *(number, required)* - which page to return
- <code>size</code> *(number, optional)* - number of entries per page, defaults to 10
- <code>col</code> *(string, optional)* - column to sort by, defaults to name
- <code>order</code> *(string, opetional)* - either 'asc' or 'desc', defaults to desc

#### Sort options
- <code>name</code>
- <code>price</code>
- <code>description</code>

+ Parameters
    + pagenum: 1 (number) - which page to return
    + size: 1 (number, optional) - number of entries per page
    + col: name (string, optional) - column to sort by
    + order: desc (string, optional) - either 'asc' or 'desc'
    
### GET List Products [GET]
+ Response 200 (application/json)
    + Attributes (object)
        + name: "brocolli slaw" (string) - name of product
        + price: 1 (number) - price per serving of product
        + description: "brocolli cole slaw" (string) - description of product
        + simlarproducts: [] (array[number]) - array of similar product ids
        + nutrition: 1 (number) - nutritional info id
        + ingredients: [] (array[number][number]) - array of ingredient ids
        + category: 1 (number) - category id
        + lifestyle: 1 (number) - lifestyle id
       + Body
        {
            "products": [
            {
                "id": 1,
                "name": "brocolli slaw",
                "price": 1,
                "description": "brocolli cole slaw",
                "similarproducts": [
                                     2,
                                     7
                                    ],
                "nutrition": 1
                "ingredients": [
                                4,
                                8,
                                34
                                ],
                "category": 1,
                "lifestyle": 1
            }
            ],
            "pagenum": 1,
            "size": 1,
            "total": 578
        }

## Specific Products [/products{?ids}]
<code>/products?ids={ids}</code><br>
Request information about products related to **ids**
#### Parameters
- <code>ids</code> *(string, required)* - comma separated list of ids


+ Parameters
    + ids: 1 (string, required) - comma separated list of ids
    
### GET Specific Products [GET]
+ Response 200 (application/json)
    + Attributes (object)
        + name: "brocolli slaw" (string) - name of product
        + price: 1 (number) - price per serving of product
        + description: "brocolli cole slaw" (string) - description of product
        + simlarproducts: [] (array[number]) - array of similar product ids
        + nutrition: 1 (number) - nutritional info id
        + ingredients: [] (array[number]) - array of ingredient ids
        + category: 1 (number) - category id
        + lifestyle: 1 (number) - lifestyle id
       + Body
        {
            "products": [
            {
                "id": 1,
                "name": "brocolli slaw",
                "price": 1,
                "description": "brocolli cole slaw",
                "similarproducts": [
                                     2,
                                     7
                                    ],
                "nutrition": 1
                "ingredients": [
                                4,
                                8,
                                34
                                ],
                "category": 1,
                "lifestyle": 1
            }
            ],
        }

# Group Lifestyles
## List Lifestyles [/lifestyles/{pagenum}{?size,col,order}]
<code>/lifestyles/{pagenum}?size={size}&col={col}&order={order}</code><br>
Get a list of lifestyles specified by the page number and optional page size.<br>
Can be sorted ascending or descending by a specific column. <br>
Defaults sorted descending by name.
#### Parameters
- <code>pagenum</code> *(number, required)* - which page to return
- <code>size</code> *(number, optional)* - number of entries per page, defaults to 10
- <code>col</code> *(string, optional)* - column to sort by, defaults to name
- <code>order</code> *(string, opetional)* - either 'asc' or 'desc', defaults to desc

#### Sort options
- <code>dietaryrestriction</code>

+ Parameters
    + pagenum: 1 (number) - which page to return
    + size: 1 (number, optional) - number of entries per page
    + col: dietaryrestriction (string, optional) - column to sort by
    + order: desc (string, optional) - either 'asc' or 'desc'
    
### GET List Lifestyles [GET]
+ Response 200 (application/json)
    + Attributes (object)
        + weightmanagement: true (boolean)
        + dietaryrestriction: "none" (string) - dietary restrictions
        + glutenfree: true (boolean)
        + carbfree: true (boolean)
        + vegetarian: true (boolean)
        + vegan: true (boolean)
        + products: [] (array[number]) - array of product ids
        + recipes: [] (array[number]) - array of recipe ids
       + Body
        {
            "products": [
            {
                "id": 1,
                "weightmanagement": true,
                "dietaryrestriction": "none",
                "glutenfree": true,
                "carbfree": true,
                "vegetarian": true,
                "vegan": true,
                "products": [
                            5
                            ],
                "recipes": []
            }
            ],
            "pagenum": 1,
            "size": 1,
            "total": 578
        }

## Specific Lifestyles [/lifestyles{?ids}]
<code>/lifestyles?ids={ids}</code><br>
Request information about products related to **ids**
#### Parameters
- <code>ids</code> *(string, required)* - comma separated list of ids


+ Parameters
    + ids: 1 (string, required) - comma separated list of ids
    
### GET Specific Lifestyles [GET]
+ Response 200 (application/json)
    + Attributes (object)
        + weightmanagement: true (boolean)
        + dietaryrestriction: "none" (string) - dietary restrictions
        + glutenfree: true (boolean)
        + carbfree: true (boolean)
        + vegetarian: true (boolean)
        + vegan: true (boolean)
        + products: [] (array[number]) - array of product ids
        + recipes: [] (array[number]) - array of recipe ids
       + Body
        {
            "products": [
            {
                "id": 1,
                "weightmanagement": true,
                "dietaryrestriction": "none",
                "glutenfree": true,
                "carbfree": true,
                "vegetarian": true,
                "vegan": true,
                "products": [
                            5
                            ],
                "recipes": []
            }
            ],
        }


# Group Nutritional Info
## Specific Nutritional Info [/nutrition{?ids}]
<code>/nutrition?ids={ids}</code><br>
Request information about nutritional info related to **ids**
#### Parameters
- <code>ids</code> *(string, required)* - comma separated list of ids


+ Parameters
    + ids: 1 (string, required) - comma separated list of ids
    
### GET Specific Nutritional Info [GET]
+ Response 200 (application/json)
    + Attributes (object)
        + serving: "5 oz" (string) - serving size
        + calories: 20 (number) - calories per serving
        + fat: 10 (number) - grams of fat per serving
        + protein: 10 (number) - grams of protein per serving
        + carbs: 10 (number) - grams of carbs per serving
       + Body
        {
            "nutritions": [
            {
                "id": 1,
                "serving": "5 oz",
                "calories": 10,
                "fat": 10,
                "protein": 10,
                "carbs": 10
            }
            ],
        }

# Group Categories
## Specific Categories [/category{?ids}]
<code>/category?ids={ids}</code><br>
Request information about categories related to **ids**
#### Parameters
- <code>ids</code> *(string, required)* - comma separated list of ids


+ Parameters
    + ids: 1 (string, required) - comma separated list of ids
    
### GET Specific Category [GET]
+ Response 200 (application/json)
    + Attributes (object)
        + name: "soup" (string) - name of category
        + products: [] (array[number]) - array of product ids
        + recipes: [] (array[number]) - array of recipe ids
       + Body
        {
            "categories": [
            {
                "id": 1,
                "name": "soup",
                "products": [
                            2,
                            5
                            ],
                "recipes": [
                            4,
                            7
                            ],
            }
            ],
        }